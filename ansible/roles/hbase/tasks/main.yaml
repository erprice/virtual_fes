---
- name: download HBase release {{ hbase_release }} (for Hadoop 2)
  get_url: url='http://archive.apache.org/dist/hbase/{{ hbase_release }}/{{ hbase_archive }}'
           dest='/home/vagrant/{{ hbase_archive }}'
  when: hadoop_major_version == 2

- name: create HBase-related directories
  file: path='{{ item }}' state=directory
  with_items:
    - '{{ hbase_data_dir }}'
    - '{{ zookeeper_data_dir }}'

- name: extract HBase archive
  command: tar xzf '/home/vagrant/{{ hbase_archive }}'
           chdir=/home/vagrant/
           creates='{{ hbase_home_dir }}'

- name: symlink HBase home directory to just hbase/
  file: path=/home/vagrant/hbase src='{{ hbase_home_dir }}' state=link

- name: write HBase config file
  template: src=hbase-site.xml.j2
            dest='{{ hbase_home_dir }}/conf/hbase-site.xml'

- name: set JAVA_HOME environment variable for HBase
  lineinfile: dest='{{ hbase_home_dir }}/conf/hbase-env.sh'
              regexp='^#?\s*export JAVA_HOME='
              line='export JAVA_HOME=/usr/lib/jvm/java-7-oracle/jre'
              state=present

- name: explicitly tell HBase to manage Zookeeper
  lineinfile: dest='{{ hbase_home_dir }}/conf/hbase-env.sh'
              regexp='^#?\s*export HBASE_MANAGES_ZK='
              line='export HBASE_MANAGES_ZK=true'
              state=present

- name: start HBase
  command: ./bin/start-hbase.sh
           chdir={{ hbase_home_dir }}
  register: hbase_start
  changed_when: hbase_start.stdout.find("starting master") and ('master running' not in hbase_start.stdout)

- name: create fes tables
  shell: /home/vagrant/hbase/bin/hbase shell < /home/vagrant/fes/schema
  register: create_table
  changed_when: "'Table already exists: fes_event' not in create_table.stdout and 'Table already exists: fes_expiration' not in create_table.stdout"

- name: start Rest server
  command: ./bin/hbase-daemon.sh start rest
           chdir={{ hbase_home_dir }}
  register: rest_start
  failed_when: (rest_start.rc != 0) and ('rest running' not in rest_start.stdout)
  changed_when: ('starting rest' in rest_start.stdout) and ('rest running' not in rest_start.stdout)